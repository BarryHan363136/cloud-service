// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gps_data.proto

package com.barry.cloud.platform.protobuf.model;

public final class GpsData {
  private GpsData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface gps_dataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:gps_data)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     */
    long getId();

    /**
     * <code>optional string terminalId = 2;</code>
     */
    String getTerminalId();
    /**
     * <code>optional string terminalId = 2;</code>
     */
    com.google.protobuf.ByteString
        getTerminalIdBytes();

    /**
     * <code>optional string dataTime = 3;</code>
     */
    String getDataTime();
    /**
     * <code>optional string dataTime = 3;</code>
     */
    com.google.protobuf.ByteString
        getDataTimeBytes();

    /**
     * <code>optional double lon = 4;</code>
     */
    double getLon();

    /**
     * <code>optional double lat = 5;</code>
     */
    double getLat();

    /**
     * <code>optional float speed = 6;</code>
     */
    float getSpeed();

    /**
     * <code>optional int32 altitude = 7;</code>
     */
    int getAltitude();

    /**
     * <code>optional int32 locType = 8;</code>
     */
    int getLocType();

    /**
     * <code>optional int32 gpsStatus = 9;</code>
     */
    int getGpsStatus();

    /**
     * <code>optional float direction = 10;</code>
     */
    float getDirection();

    /**
     * <code>optional int32 satellite = 11;</code>
     */
    int getSatellite();
  }
  /**
   * Protobuf type {@code gps_data}
   */
  public  static final class gps_data extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:gps_data)
      gps_dataOrBuilder {
    // Use gps_data.newBuilder() to construct.
    private gps_data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private gps_data() {
      id_ = 0L;
      terminalId_ = "";
      dataTime_ = "";
      lon_ = 0D;
      lat_ = 0D;
      speed_ = 0F;
      altitude_ = 0;
      locType_ = 0;
      gpsStatus_ = 0;
      direction_ = 0F;
      satellite_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private gps_data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt64();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              terminalId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              dataTime_ = s;
              break;
            }
            case 33: {

              lon_ = input.readDouble();
              break;
            }
            case 41: {

              lat_ = input.readDouble();
              break;
            }
            case 53: {

              speed_ = input.readFloat();
              break;
            }
            case 56: {

              altitude_ = input.readInt32();
              break;
            }
            case 64: {

              locType_ = input.readInt32();
              break;
            }
            case 72: {

              gpsStatus_ = input.readInt32();
              break;
            }
            case 85: {

              direction_ = input.readFloat();
              break;
            }
            case 88: {

              satellite_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GpsData.internal_static_gps_data_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GpsData.internal_static_gps_data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GpsData.gps_data.class, GpsData.gps_data.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int TERMINALID_FIELD_NUMBER = 2;
    private volatile Object terminalId_;
    /**
     * <code>optional string terminalId = 2;</code>
     */
    public String getTerminalId() {
      Object ref = terminalId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        terminalId_ = s;
        return s;
      }
    }
    /**
     * <code>optional string terminalId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTerminalIdBytes() {
      Object ref = terminalId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        terminalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATATIME_FIELD_NUMBER = 3;
    private volatile Object dataTime_;
    /**
     * <code>optional string dataTime = 3;</code>
     */
    public String getDataTime() {
      Object ref = dataTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dataTime_ = s;
        return s;
      }
    }
    /**
     * <code>optional string dataTime = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDataTimeBytes() {
      Object ref = dataTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dataTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LON_FIELD_NUMBER = 4;
    private double lon_;
    /**
     * <code>optional double lon = 4;</code>
     */
    public double getLon() {
      return lon_;
    }

    public static final int LAT_FIELD_NUMBER = 5;
    private double lat_;
    /**
     * <code>optional double lat = 5;</code>
     */
    public double getLat() {
      return lat_;
    }

    public static final int SPEED_FIELD_NUMBER = 6;
    private float speed_;
    /**
     * <code>optional float speed = 6;</code>
     */
    public float getSpeed() {
      return speed_;
    }

    public static final int ALTITUDE_FIELD_NUMBER = 7;
    private int altitude_;
    /**
     * <code>optional int32 altitude = 7;</code>
     */
    public int getAltitude() {
      return altitude_;
    }

    public static final int LOCTYPE_FIELD_NUMBER = 8;
    private int locType_;
    /**
     * <code>optional int32 locType = 8;</code>
     */
    public int getLocType() {
      return locType_;
    }

    public static final int GPSSTATUS_FIELD_NUMBER = 9;
    private int gpsStatus_;
    /**
     * <code>optional int32 gpsStatus = 9;</code>
     */
    public int getGpsStatus() {
      return gpsStatus_;
    }

    public static final int DIRECTION_FIELD_NUMBER = 10;
    private float direction_;
    /**
     * <code>optional float direction = 10;</code>
     */
    public float getDirection() {
      return direction_;
    }

    public static final int SATELLITE_FIELD_NUMBER = 11;
    private int satellite_;
    /**
     * <code>optional int32 satellite = 11;</code>
     */
    public int getSatellite() {
      return satellite_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0L) {
        output.writeInt64(1, id_);
      }
      if (!getTerminalIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, terminalId_);
      }
      if (!getDataTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dataTime_);
      }
      if (lon_ != 0D) {
        output.writeDouble(4, lon_);
      }
      if (lat_ != 0D) {
        output.writeDouble(5, lat_);
      }
      if (speed_ != 0F) {
        output.writeFloat(6, speed_);
      }
      if (altitude_ != 0) {
        output.writeInt32(7, altitude_);
      }
      if (locType_ != 0) {
        output.writeInt32(8, locType_);
      }
      if (gpsStatus_ != 0) {
        output.writeInt32(9, gpsStatus_);
      }
      if (direction_ != 0F) {
        output.writeFloat(10, direction_);
      }
      if (satellite_ != 0) {
        output.writeInt32(11, satellite_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (!getTerminalIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, terminalId_);
      }
      if (!getDataTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dataTime_);
      }
      if (lon_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lon_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lat_);
      }
      if (speed_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, speed_);
      }
      if (altitude_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, altitude_);
      }
      if (locType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, locType_);
      }
      if (gpsStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, gpsStatus_);
      }
      if (direction_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, direction_);
      }
      if (satellite_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, satellite_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GpsData.gps_data)) {
        return super.equals(obj);
      }
      GpsData.gps_data other = (GpsData.gps_data) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getTerminalId()
          .equals(other.getTerminalId());
      result = result && getDataTime()
          .equals(other.getDataTime());
      result = result && (
          Double.doubleToLongBits(getLon())
          == Double.doubleToLongBits(
              other.getLon()));
      result = result && (
          Double.doubleToLongBits(getLat())
          == Double.doubleToLongBits(
              other.getLat()));
      result = result && (
          Float.floatToIntBits(getSpeed())
          == Float.floatToIntBits(
              other.getSpeed()));
      result = result && (getAltitude()
          == other.getAltitude());
      result = result && (getLocType()
          == other.getLocType());
      result = result && (getGpsStatus()
          == other.getGpsStatus());
      result = result && (
          Float.floatToIntBits(getDirection())
          == Float.floatToIntBits(
              other.getDirection()));
      result = result && (getSatellite()
          == other.getSatellite());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
      hash = (37 * hash) + TERMINALID_FIELD_NUMBER;
      hash = (53 * hash) + getTerminalId().hashCode();
      hash = (37 * hash) + DATATIME_FIELD_NUMBER;
      hash = (53 * hash) + getDataTime().hashCode();
      hash = (37 * hash) + LON_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLon()));
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getSpeed());
      hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
      hash = (53 * hash) + getAltitude();
      hash = (37 * hash) + LOCTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getLocType();
      hash = (37 * hash) + GPSSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getGpsStatus();
      hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDirection());
      hash = (37 * hash) + SATELLITE_FIELD_NUMBER;
      hash = (53 * hash) + getSatellite();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GpsData.gps_data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GpsData.gps_data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GpsData.gps_data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GpsData.gps_data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GpsData.gps_data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GpsData.gps_data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GpsData.gps_data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GpsData.gps_data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GpsData.gps_data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GpsData.gps_data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GpsData.gps_data prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gps_data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:gps_data)
        GpsData.gps_dataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GpsData.internal_static_gps_data_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GpsData.internal_static_gps_data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GpsData.gps_data.class, GpsData.gps_data.Builder.class);
      }

      // Construct using com.barry.cloud.platform.protobuf.model.GpsData.gps_data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;

        terminalId_ = "";

        dataTime_ = "";

        lon_ = 0D;

        lat_ = 0D;

        speed_ = 0F;

        altitude_ = 0;

        locType_ = 0;

        gpsStatus_ = 0;

        direction_ = 0F;

        satellite_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GpsData.internal_static_gps_data_descriptor;
      }

      public GpsData.gps_data getDefaultInstanceForType() {
        return GpsData.gps_data.getDefaultInstance();
      }

      public GpsData.gps_data build() {
        GpsData.gps_data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GpsData.gps_data buildPartial() {
        GpsData.gps_data result = new GpsData.gps_data(this);
        result.id_ = id_;
        result.terminalId_ = terminalId_;
        result.dataTime_ = dataTime_;
        result.lon_ = lon_;
        result.lat_ = lat_;
        result.speed_ = speed_;
        result.altitude_ = altitude_;
        result.locType_ = locType_;
        result.gpsStatus_ = gpsStatus_;
        result.direction_ = direction_;
        result.satellite_ = satellite_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GpsData.gps_data) {
          return mergeFrom((GpsData.gps_data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GpsData.gps_data other) {
        if (other == GpsData.gps_data.getDefaultInstance()) return this;
        if (other.getId() != 0L) {
          setId(other.getId());
        }
        if (!other.getTerminalId().isEmpty()) {
          terminalId_ = other.terminalId_;
          onChanged();
        }
        if (!other.getDataTime().isEmpty()) {
          dataTime_ = other.dataTime_;
          onChanged();
        }
        if (other.getLon() != 0D) {
          setLon(other.getLon());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getSpeed() != 0F) {
          setSpeed(other.getSpeed());
        }
        if (other.getAltitude() != 0) {
          setAltitude(other.getAltitude());
        }
        if (other.getLocType() != 0) {
          setLocType(other.getLocType());
        }
        if (other.getGpsStatus() != 0) {
          setGpsStatus(other.getGpsStatus());
        }
        if (other.getDirection() != 0F) {
          setDirection(other.getDirection());
        }
        if (other.getSatellite() != 0) {
          setSatellite(other.getSatellite());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GpsData.gps_data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GpsData.gps_data) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder setId(long value) {

        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       */
      public Builder clearId() {

        id_ = 0L;
        onChanged();
        return this;
      }

      private Object terminalId_ = "";
      /**
       * <code>optional string terminalId = 2;</code>
       */
      public String getTerminalId() {
        Object ref = terminalId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          terminalId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string terminalId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTerminalIdBytes() {
        Object ref = terminalId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          terminalId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string terminalId = 2;</code>
       */
      public Builder setTerminalId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        terminalId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string terminalId = 2;</code>
       */
      public Builder clearTerminalId() {

        terminalId_ = getDefaultInstance().getTerminalId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string terminalId = 2;</code>
       */
      public Builder setTerminalIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        terminalId_ = value;
        onChanged();
        return this;
      }

      private Object dataTime_ = "";
      /**
       * <code>optional string dataTime = 3;</code>
       */
      public String getDataTime() {
        Object ref = dataTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dataTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string dataTime = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDataTimeBytes() {
        Object ref = dataTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dataTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dataTime = 3;</code>
       */
      public Builder setDataTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        dataTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dataTime = 3;</code>
       */
      public Builder clearDataTime() {

        dataTime_ = getDefaultInstance().getDataTime();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dataTime = 3;</code>
       */
      public Builder setDataTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        dataTime_ = value;
        onChanged();
        return this;
      }

      private double lon_ ;
      /**
       * <code>optional double lon = 4;</code>
       */
      public double getLon() {
        return lon_;
      }
      /**
       * <code>optional double lon = 4;</code>
       */
      public Builder setLon(double value) {

        lon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lon = 4;</code>
       */
      public Builder clearLon() {

        lon_ = 0D;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <code>optional double lat = 5;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <code>optional double lat = 5;</code>
       */
      public Builder setLat(double value) {

        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lat = 5;</code>
       */
      public Builder clearLat() {

        lat_ = 0D;
        onChanged();
        return this;
      }

      private float speed_ ;
      /**
       * <code>optional float speed = 6;</code>
       */
      public float getSpeed() {
        return speed_;
      }
      /**
       * <code>optional float speed = 6;</code>
       */
      public Builder setSpeed(float value) {

        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float speed = 6;</code>
       */
      public Builder clearSpeed() {

        speed_ = 0F;
        onChanged();
        return this;
      }

      private int altitude_ ;
      /**
       * <code>optional int32 altitude = 7;</code>
       */
      public int getAltitude() {
        return altitude_;
      }
      /**
       * <code>optional int32 altitude = 7;</code>
       */
      public Builder setAltitude(int value) {

        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 altitude = 7;</code>
       */
      public Builder clearAltitude() {

        altitude_ = 0;
        onChanged();
        return this;
      }

      private int locType_ ;
      /**
       * <code>optional int32 locType = 8;</code>
       */
      public int getLocType() {
        return locType_;
      }
      /**
       * <code>optional int32 locType = 8;</code>
       */
      public Builder setLocType(int value) {

        locType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 locType = 8;</code>
       */
      public Builder clearLocType() {

        locType_ = 0;
        onChanged();
        return this;
      }

      private int gpsStatus_ ;
      /**
       * <code>optional int32 gpsStatus = 9;</code>
       */
      public int getGpsStatus() {
        return gpsStatus_;
      }
      /**
       * <code>optional int32 gpsStatus = 9;</code>
       */
      public Builder setGpsStatus(int value) {

        gpsStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gpsStatus = 9;</code>
       */
      public Builder clearGpsStatus() {

        gpsStatus_ = 0;
        onChanged();
        return this;
      }

      private float direction_ ;
      /**
       * <code>optional float direction = 10;</code>
       */
      public float getDirection() {
        return direction_;
      }
      /**
       * <code>optional float direction = 10;</code>
       */
      public Builder setDirection(float value) {

        direction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float direction = 10;</code>
       */
      public Builder clearDirection() {

        direction_ = 0F;
        onChanged();
        return this;
      }

      private int satellite_ ;
      /**
       * <code>optional int32 satellite = 11;</code>
       */
      public int getSatellite() {
        return satellite_;
      }
      /**
       * <code>optional int32 satellite = 11;</code>
       */
      public Builder setSatellite(int value) {

        satellite_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 satellite = 11;</code>
       */
      public Builder clearSatellite() {

        satellite_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:gps_data)
    }

    // @@protoc_insertion_point(class_scope:gps_data)
    private static final GpsData.gps_data DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GpsData.gps_data();
    }

    public static GpsData.gps_data getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<gps_data>
        PARSER = new com.google.protobuf.AbstractParser<gps_data>() {
      public gps_data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new gps_data(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<gps_data> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<gps_data> getParserForType() {
      return PARSER;
    }

    public GpsData.gps_data getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_gps_data_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_gps_data_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016gps_data.proto\"\301\001\n\010gps_data\022\n\n\002id\030\001 \001(" +
      "\003\022\022\n\nterminalId\030\002 \001(\t\022\020\n\010dataTime\030\003 \001(\t\022" +
      "\013\n\003lon\030\004 \001(\001\022\013\n\003lat\030\005 \001(\001\022\r\n\005speed\030\006 \001(\002" +
      "\022\020\n\010altitude\030\007 \001(\005\022\017\n\007locType\030\010 \001(\005\022\021\n\tg" +
      "psStatus\030\t \001(\005\022\021\n\tdirection\030\n \001(\002\022\021\n\tsat" +
      "ellite\030\013 \001(\005B2\n\'com.barry.cloud.platform" +
      ".protobuf.modelB\007GpsDatab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_gps_data_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_gps_data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_gps_data_descriptor,
        new String[] { "Id", "TerminalId", "DataTime", "Lon", "Lat", "Speed", "Altitude", "LocType", "GpsStatus", "Direction", "Satellite", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
